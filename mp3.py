import sys
import subprocess
import re
import os
import shutil
import json

def main():
    url = sys.argv[1]
    url_result_groups = re.search(r'^.*(?:youtu.be\/|v\/|u\/\w\/|embed\/|watch\?v=)([^#\&\?]*).*$', url).groups()
    if not url_result_groups or len(url_result_groups) > 1:
        print("Invalid URL")
        return

    video_id = url_result_groups[0]
    print(video_id)

    tempdir_path = f'./{video_id}'
    os.mkdir(tempdir_path)
    os.chdir(tempdir_path)

    new_url = f'https://www.youtube.com/watch?v={video_id}'
    audio_path = f'{video_id}.mp3'


    yt_dlp_command = ['yt-dlp',
        '-x',                               # extract audio
        '-k',                               # keep video
        '-o', '%(id)s.%(ext)s',             # set audio path to [youtube id].[extension]
        '--write-thumbnail',                # get thumbnail
        '--convert-thumbnails', 'png',      # convert thumbnail to png
        '--write-description',              # get description
        '--audio-format', 'mp3',            # convert audio to mp3
        '--audio-quality', '0',             # highest quality audio
        '--write-info-json',
        f'{new_url}',                       # youtube video url
    ]
    subprocess.run(yt_dlp_command, check=True)

    # check if description is autogenerated by youtube
    is_autogenerated = False
    description_str = None
    with open(f'{video_id}.description', mode='r') as description_file:
        description_str = description_file.read()

    if description_str and re.match(r'^[\S\s]*Auto-generated by YouTube\.$', description_str):
        is_autogenerated = True

    print(f"is autogenerated: {is_autogenerated}")

    cover_art_path = f'frame_{video_id}.png' if is_autogenerated else f'{video_id}.png'
    if is_autogenerated:
        ffmpeg_get_frame_command = ['ffmpeg',
            '-i', f'{video_id}.webm',
            '-vf', 'select=eq(n\,5)',
            '-vframes', '1',
            f'{cover_art_path}'
        ]
        subprocess.run(ffmpeg_get_frame_command, check=True)
     
    eyed3_command = ['eyeD3',
        '--add-image', f'{cover_art_path}:FRONT_COVER',
        f'{audio_path}'
    ]
    subprocess.run(eyed3_command, check=True)

    with open(f'{video_id}.info.json') as metadata_json_file:
        metadata = json.load(metadata_json_file)
        if 'artist' in metadata:
            subprocess.run(['eyeD3', '--artist', f"{metadata['artist']}", f'{audio_path}'], check=True)
        if 'album' in metadata:
            subprocess.run(['eyeD3', '--album', f"{metadata['album']}", f'{audio_path}'], check=True)

        title = ""
        if 'track' in metadata:
            title = metadata['track']
        elif 'title' in metadata:
            title = metadata['title']
        subprocess.run(['eyeD3', '--title', f"{title}", f'{audio_path}'], check=True)

    os.chdir("../")
    shutil.copyfile(f'{tempdir_path}/{video_id}.mp3', f'{video_id}.mp3')
    shutil.rmtree(tempdir_path)

if __name__ == '__main__':
    main()
